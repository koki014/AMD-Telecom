# Generated by Django 3.1.4 on 2021-03-18 22:47

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import product.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Başlıq')),
                ('image', models.ImageField(blank=True, upload_to='categories_images', verbose_name='Şəkil')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('slug', models.SlugField(default='', editable=False, max_length=110, unique=True, verbose_name='Slug')),
                ('is_main', models.BooleanField(default=False, verbose_name='Əsas')),
                ('is_second', models.BooleanField(default=False, verbose_name='İkinci')),
                ('is_third', models.BooleanField(default=False, verbose_name='Üçüncü')),
                ('status', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ManyToManyField(blank=True, related_name='_category_parent_+', to='product.Category')),
            ],
            options={
                'verbose_name': 'Kateqoriya',
                'verbose_name_plural': 'Kateqoriyalar',
                'db_table': 'category',
                'ordering': ('created_at', 'title'),
                'unique_together': {('slug',)},
            },
        ),
        migrations.CreateModel(
            name='Marka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Başlıq')),
                ('image', models.ImageField(blank=True, upload_to='marka_images', verbose_name='Şəkil')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('slug', models.SlugField(default='', editable=False, max_length=110, unique=True, verbose_name='Slug')),
                ('status', models.BooleanField(default=True, verbose_name='is_active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Marka',
                'verbose_name_plural': 'Markalar',
                'db_table': 'marka',
                'ordering': ('-created_at', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Başlıq')),
                ('color_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Rəng adı')),
                ('color_code', colorfield.fields.ColorField(blank=True, default='', max_length=18, null=True, verbose_name='Rəng kodu')),
                ('internal_storage', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Daxili yaddaş')),
                ('ram', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Operativ yaddaş')),
                ('operator_code', models.CharField(blank=True, default=None, max_length=3, null=True, verbose_name='Operator code')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=110, unique=True, verbose_name='Slug')),
                ('sku', models.CharField(db_index=True, max_length=50, verbose_name='SKU')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Ətraflı')),
                ('sale_count', models.IntegerField(default=0, verbose_name='Satış sayı')),
                ('is_published', models.BooleanField(default=True, verbose_name='Paylaş')),
                ('is_new', models.BooleanField(default=True, verbose_name='Yeni')),
                ('is_new_expired', models.DateTimeField(blank=True, default=product.models.one_month_from_today, null=True, verbose_name='Bitmə vaxtı')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is_featured')),
                ('is_discount', models.BooleanField(default=False, verbose_name='Endirim')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, verbose_name='Qiymət')),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Köhnə qiymət Price')),
                ('discount_type', models.PositiveIntegerField(choices=[(1, 'Yox'), (2, 'Faiz'), (3, 'Vahid')], default=1, verbose_name='Endirim növü')),
                ('discount_value', models.IntegerField(blank=True, null=True, verbose_name='Endirim dəyəri')),
                ('status', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ManyToManyField(related_name='categories', to='product.Category')),
                ('marka', models.ManyToManyField(blank=True, related_name='marka', to='product.Marka')),
                ('same_product', models.ManyToManyField(blank=True, related_name='_product_same_product_+', to='product.Product')),
            ],
            options={
                'verbose_name': 'Məhsul',
                'verbose_name_plural': 'Məhsullar',
                'db_table': 'product',
                'ordering': ('-created_at', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Product_details_property_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Title')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Detalın növü',
                'verbose_name_plural': 'Detalın növləri',
                'db_table': 'detail_name',
            },
        ),
        migrations.CreateModel(
            name='Product_details_property_value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=50, null=True, verbose_name='Content')),
                ('file', models.FileField(blank=True, null=True, upload_to='products_files', verbose_name='File')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Property value',
                'verbose_name_plural': 'Properties values',
                'db_table': 'Property value',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=100, verbose_name='Title')),
                ('is_published', models.BooleanField(default=True, verbose_name='is published')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'db_table': 'tag',
                'ordering': ('-created_at', 'title'),
            },
        ),
        migrations.CreateModel(
            name='Product_images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=75, size=[800, 500], upload_to='product_images')),
                ('is_main', models.BooleanField(default=False, verbose_name='Main Image')),
                ('is_second_main', models.BooleanField(default=False, verbose_name='Second Main Image')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
            options={
                'verbose_name': 'Şəkil',
                'verbose_name_plural': 'Şəkillər',
                'db_table': 'image',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Product_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=50, null=True, verbose_name='Value')),
                ('is_feature', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is feature')),
                ('is_detail', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is detail')),
                ('is_file', models.BooleanField(blank=True, default=False, null=True, verbose_name='Is file')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, default='Not', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.product')),
                ('product_details_property_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_details_property_name', to='product.product_details_property_name')),
            ],
            options={
                'verbose_name': 'Məhsul detalı',
                'verbose_name_plural': 'Məhsul detalları',
                'db_table': 'product_details',
            },
        ),
        migrations.CreateModel(
            name='Product_colors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coler_title', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Title')),
                ('color_code', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Title')),
                ('status', models.BooleanField(default=True, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='product.product')),
            ],
            options={
                'verbose_name': 'Məhsul rəngi',
                'verbose_name_plural': 'Məhsul rəngləri',
                'db_table': 'product_colors',
                'ordering': ('created_at',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tags', to='product.Tag'),
        ),
        migrations.AddField(
            model_name='product',
            name='who_like',
            field=models.ManyToManyField(blank=True, related_name='liked_products', to='account.Customer'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('title', 'slug')},
        ),
    ]
